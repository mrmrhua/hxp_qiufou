<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.houxiaopang.dao.AlbumsMapper" >
  <resultMap id="BaseResultMap" type="com.houxiaopang.model.Albums" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="INTEGER" />
    <result column="up_time" property="upTime" jdbcType="TIMESTAMP" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
    <result column="privacy" property="privacy" jdbcType="INTEGER" />
    <result column="not_anonymous" property="notAnonymous" jdbcType="BIT" />
    <result column="not_business" property="notBusiness" jdbcType="BIT" />
    <result column="not_saved" property="notSaved" jdbcType="BIT" />
    <result column="not_single" property="notSingle" jdbcType="BIT" />
    <result column="price" property="price" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.houxiaopang.model.Albums" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, title, category, up_time, cover, privacy, not_anonymous, not_business, 
    not_saved, not_single, price
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from albums
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findByUserId"  resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
    select * from albums where user_id = #{user_id,jdbcType=INTEGER}
  </select>
  <insert id="insertList" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
    insert into albums (user_id, title, category, up_time, cover, description) values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId,jdbcType=INTEGER}, #{item.title,jdbcType=VARCHAR},#{item.category,jdbcType=INTEGER},#{item.upTime,jdbcType=TIMESTAMP},#{item.cover,jdbcType=VARCHAR},#{item.description,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from albums
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.houxiaopang.model.Albums" >
    insert into albums (id, user_id, title, 
      category, up_time, cover, 
      privacy, not_anonymous, not_business, 
      not_saved, not_single, price, 
      description)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{category,jdbcType=INTEGER}, #{upTime,jdbcType=TIMESTAMP}, #{cover,jdbcType=VARCHAR}, 
      #{privacy,jdbcType=INTEGER}, #{notAnonymous,jdbcType=BIT}, #{notBusiness,jdbcType=BIT}, 
      #{notSaved,jdbcType=BIT}, #{notSingle,jdbcType=BIT}, #{price,jdbcType=VARCHAR}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.houxiaopang.model.Albums" >
    insert into albums
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="upTime != null" >
        up_time,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="privacy != null" >
        privacy,
      </if>
      <if test="notAnonymous != null" >
        not_anonymous,
      </if>
      <if test="notBusiness != null" >
        not_business,
      </if>
      <if test="notSaved != null" >
        not_saved,
      </if>
      <if test="notSingle != null" >
        not_single,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=INTEGER},
      </if>
      <if test="upTime != null" >
        #{upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="privacy != null" >
        #{privacy,jdbcType=INTEGER},
      </if>
      <if test="notAnonymous != null" >
        #{notAnonymous,jdbcType=BIT},
      </if>
      <if test="notBusiness != null" >
        #{notBusiness,jdbcType=BIT},
      </if>
      <if test="notSaved != null" >
        #{notSaved,jdbcType=BIT},
      </if>
      <if test="notSingle != null" >
        #{notSingle,jdbcType=BIT},
      </if>
      <if test="price != null" >
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.houxiaopang.model.Albums" >
    update albums
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="upTime != null" >
        up_time = #{upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="privacy != null" >
        privacy = #{privacy,jdbcType=INTEGER},
      </if>
      <if test="notAnonymous != null" >
        not_anonymous = #{notAnonymous,jdbcType=BIT},
      </if>
      <if test="notBusiness != null" >
        not_business = #{notBusiness,jdbcType=BIT},
      </if>
      <if test="notSaved != null" >
        not_saved = #{notSaved,jdbcType=BIT},
      </if>
      <if test="notSingle != null" >
        not_single = #{notSingle,jdbcType=BIT},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.houxiaopang.model.Albums" >
    update albums
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      up_time = #{upTime,jdbcType=TIMESTAMP},
      cover = #{cover,jdbcType=VARCHAR},
      privacy = #{privacy,jdbcType=INTEGER},
      not_anonymous = #{notAnonymous,jdbcType=BIT},
      not_business = #{notBusiness,jdbcType=BIT},
      not_saved = #{notSaved,jdbcType=BIT},
      not_single = #{notSingle,jdbcType=BIT},
      price = #{price,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.houxiaopang.model.Albums" >
    update albums
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      up_time = #{upTime,jdbcType=TIMESTAMP},
      cover = #{cover,jdbcType=VARCHAR},
      privacy = #{privacy,jdbcType=INTEGER},
      not_anonymous = #{notAnonymous,jdbcType=BIT},
      not_business = #{notBusiness,jdbcType=BIT},
      not_saved = #{notSaved,jdbcType=BIT},
      not_single = #{notSingle,jdbcType=BIT},
      price = #{price,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>